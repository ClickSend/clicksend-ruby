=begin
#ClickSend v3 API

# This is an official SDK for [ClickSend](https://clicksend.com)  Below you will find a current list of the available methods for clicksend.  *NOTE: You will need to create a free account to use the API. You can register [here](https://dashboard.clicksend.com/#/signup/step1/)..* 

OpenAPI spec version: 3.1
Contact: support@clicksend.com
Generated by: https://github.com/clicksend-api/clicksend-codegen.git
ClickSend Codegen version: 2.4.36

=end

require 'spec_helper'
require 'json'

# Unit tests for ClickSendClient::NumberApi
# Automatically generated by clicksend-codegen (github.com/clicksend-api/clicksend-codegen)
# Please update as you see appropriate
describe 'NumberApi' do
  before do
    # run before each test
    @instance = ClickSendClient::NumberApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of NumberApi' do
    it 'should create an instance of NumberApi' do
      expect(@instance).to be_instance_of(ClickSendClient::NumberApi)
    end
  end

  # unit tests for numbers_buy_by_dedicated_number_post
  # Buy dedicated number
  # Buy dedicated number
  # @param dedicated_number Phone number to purchase
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'numbers_buy_by_dedicated_number_post test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for numbers_get
  # Get all availible dedicated numbers
  # Get all availible dedicated numbers
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :page Page number
  # @option opts [Integer] :limit Number of records per page
  # @return [String]
  describe 'numbers_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for numbers_search_by_country_get
  # Get all dedicated numbers by country
  # Get all dedicated numbers by country
  # @param country Country code to search
  # @param [Hash] opts the optional parameters
  # @option opts [String] :search Your search pattern or query.
  # @option opts [Integer] :search_type Your strategy for searching, 0 &#x3D; starts with, 1 &#x3D; anywhere, 2 &#x3D; ends with.
  # @option opts [Integer] :page Page number
  # @option opts [Integer] :limit Number of records per page
  # @return [String]
  describe 'numbers_search_by_country_get test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
